name: Build APK

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
    - name: Check out the repository
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Set up Android SDK
      uses: android-actions/setup-android@v2
      with:
        api-level: 31
        build-tools: 31.0.0
        ndk-version: 21.4.7075529

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Cache node modules
      uses: actions/cache@v3
      with:
        path: node_modules
        key: ${{ runner.os }}-npm-cache-${{ hashFiles('package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-npm-cache-

    - name: Install dependencies
      run: npm install

    - name: Create .env file
      run: |
        echo "EXPO_PUBLIC_SUPABASE_URL=${{ secrets.EXPO_PUBLIC_SUPABASE_URL }}" >> .env
        echo "EXPO_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.EXPO_PUBLIC_SUPABASE_ANON_KEY }}" >> .env

    - name: Set version in app.json
      id: version_tag
      run: |
        TAG_NAME=v1.0_$(date +%Y%m%d%H%M%S)
        echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
        jq '.expo.version = "'"$TAG_NAME"'"' app.json > app.json.tmp && mv app.json.tmp app.json

    - name: Run prebuild
      run: |
        export CI=1
        npx expo prebuild --platform android

    - name: Set executable permissions for Gradle
      run: chmod +x android/gradlew

    - name: Build APK
      run: |
        cd android
        ./gradlew assembleRelease

    - name: Create Git tag
      run: |
        git config --local user.name "github-actions"
        git config --local user.email "github-actions@github.com"
        git tag ${{ env.TAG_NAME }}
        git push origin ${{ env.TAG_NAME }}

    - name: Upload APK to GitHub release
      uses: softprops/action-gh-release@v1
      with:
        files: android/app/build/outputs/apk/release/app-release.apk
        tag_name: ${{ env.TAG_NAME }}
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}

    - name: Clean up
      run: git clean -fdx
